{{- /*
Check if the TLS secret already exists and initialize variables for later use at the top level
*/ -}}
{{- $secret := lookup "v1" "Secret" .Release.Namespace .Values.tls.secretName }}
{{ $ca := "" }}
{{ $key := "" }}
{{ $crt := "" }}
---
{{- if (eq .Values.tls.mode "AUTOGENERATED") }}
  {{- if and $secret (not .Values.tls.autogenerated.renew) }}
    {{- $ca = get $secret.data "ca.crt" }}
    {{- $key = get $secret.data "tls.key" }}
    {{- $crt = get $secret.data "tls.crt" }}
  {{- else }}
    {{- $serviceName := (printf "%s.%s.svc" (printf "%s%s" (include "chart.fullname" .) "-webhook-service") .Release.Namespace)}}
    {{- $cert := genSelfSignedCert $serviceName nil (list $serviceName) (int .Values.tls.autogenerated.validityDuration) }}
    {{- $ca = b64enc $cert.Cert }}
    {{- $key = b64enc $cert.Key }}
    {{- $crt = b64enc $cert.Cert }}
  {{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.tls.secretName }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca }}
  tls.key: {{ $key }}
  tls.crt: {{ $crt }}
---
{{- else if (eq .Values.tls.mode "SECRET") }}
  {{- $ca = get $secret.data "ca.crt" }}
  {{- $key = get $secret.data "tls.key" }}
  {{- $crt = get $secret.data "tls.crt" }}
{{- end }}

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "chart.fullname" . }}-mutating-webhook-configuration
  labels:
  {{- include "chart.labels" . | nindent 4 }}
  {{- if or (eq .Values.tls.mode "ISSUER") (eq .Values.tls.mode "SELF_SIGNED")}}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "chart.fullname" . }}-serving-cert
  {{- end }}
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-dataservices-nutanix-com-v1alpha1-applicationclone
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: mapplicationclone.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - applicationclones
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-dataservices-nutanix-com-v1alpha1-appprotectionplan
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: mappprotectionplan.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - appprotectionplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-dataservices-nutanix-com-v1alpha1-protectionplan
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: mprotectionplan.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - protectionplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-dataservices-nutanix-com-v1alpha1-schedulepolicy
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: mschedulepolicy.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - schedulepolicies
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "chart.fullname" . }}-validating-webhook-configuration
  labels:
  {{- include "chart.labels" . | nindent 4 }}
  {{- if or (eq .Values.tls.mode "ISSUER") (eq .Values.tls.mode "SELF_SIGNED")}}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "chart.fullname" . }}-serving-cert
  {{- end }}
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-dataservices-nutanix-com-v1alpha1-applicationclone
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: vapplicationclone.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - applicationclones
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-dataservices-nutanix-com-v1alpha1-appprotectionplan
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: vappprotectionplan.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - appprotectionplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-dataservices-nutanix-com-v1alpha1-protectionplan
    caBundle: {{ $ca }}
  failurePolicy: Fail
  name: vprotectionplan.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - protectionplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "chart.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-dataservices-nutanix-com-v1alpha1-schedulepolicy
    caBundle: {{ $ca }}  
  failurePolicy: Fail
  name: vschedulepolicy.kb.io
  rules:
  - apiGroups:
    - dataservices.nutanix.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - schedulepolicies
  sideEffects: None