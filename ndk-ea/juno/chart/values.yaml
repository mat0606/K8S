# Default values for nutanix-dataservices-operator
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

manager:
  # -- Image
  repository: quay.io/subodh01/juno
  # -- Image tag
  # @default -- .Chart.AppVersion
  tag: ea_rc1
  # -- Image pull policy
  pullPolicy: Always

kubeRbacProxy:
  # -- Image
  repository: gcr.io/kubebuilder/kube-rbac-proxy
  # -- Image tag
  # @default -- .Chart.AppVersion
  tag: v0.8.0

# Set Values for Juno Metrics Monitoring using Prometheus 
prometheus:
  # Requires Prometheus Operator CRDs 
  enable: false
  # Set values for Prometheus serviceMonitor 
  serviceMonitor:
    # Add Custom labels for serviceMonitor here
    customLabels: {}
  
# Set values for the nutanix-dataservices deployment
deployment:
  customLabels: { }
  # -- List of Kubernetes [`tolerations`](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) to add to the Deployment.
  tolerations: [ ] 
  # -- Kubernetes [`nodeSelector`](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector) to add to the Deployment.
  nodeSelector: { }
  # Set replicas for the nutanix-dataservices deployment
  replicas: 1
  # Set values for kube-rback-proxy container 
  kubeRbacProxy:
    # resources to be allocated to the kube-rbac-proxy
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
  # Set values for controller manager container
  manager:
    # resources to be allocated to the controller manager
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
# Configuration to expose controller metrics service
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  type: ClusterIP
# Configuration to expose webhook service
webhookService:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  type: ClusterIP

tls:
  # AUTOGENERATED: autogenerated cert without cert-manager. A secret named with $(secretName) will be installed
  # SECRET: cert base on existing tls secret. $(secretName) will be used for cert check
  # ISSUER: cert base on existing cert-manager and issuer. Please provide $(issuerName) and $(secretName) pre-installed
  # SELF_SIGNED: cert base on existing cert-manager. Nothing needs to be configured if you choose this mode
  mode: "SELF_SIGNED"
  # Where to get the cert for the webhook. - "generate, secret"
  autogenerated:
    # Allow to renew self-signed generated certificate
    renew: false
    # Validity of certificate when generated by Helm
    validityDuration: 3650
  issuer:
    issuerName: ""
  # Name of the secret where certificate are stored
  # Should be a pre-existing secret in release namespace if tls.mode = SECRET
  secretName: webhook-server-cert

# Configurable parameters for dataservices controllers
config:
  # To provide secret to be used by controllers for storage backend authentication
  # @Required-- secret should be in the helm release namespace
  secret:
    # pointer to the secret to be consumed by controllers
    name: ntnx-pc-secret
    # path to mount the secret as a volume
    dir:  "/var/run/ntnx-secret-dir"
  # Configurable parametrs for dataservices controller manager
  controllerManagerConfig:
    health:
      # HealthProbeBindAddress is the TCP address that the controller should bind to
      healthProbeBindAddress: ":8081"
    # LeaderElection config to be used when configuring the manager.Manager leader election
    leaderElection:
      leaderElect: true
      resourceName: d30ae773.nutanix.com
    metrics:
      # BindAddress is the TCP address that the controller should bind to
      bindAddress: 127.0.0.1:8080
    # defines the config for webhook server for the controller.
    webhook:
      # port is the port that the webhook server serves at.
      port: 9443
      # host is the hostname that the webhook server binds to.
      # @default -- ""
      host:
      # CertDir is the directory that contains the server key and certificate.
      # if not set, webhook server would look up the server key and certificate in
      # {TempDir}/k8s-webhook-server/serving-certs. The server key and certificate
      # must be named tls.key and tls.crt, respectively.
      certDir:
  # Configurable parametrs for Application Resource
  applicationConfig:
  # Configurable parametrs for ApplicationRestoreRequest Resource
  appRestoreRequestConfig:
  # Configurable parametrs for ApplicationSnapshotContent Resource
  appSnapshotContentConfig:
  # Configurable parametrs for AppProtectionPlan Resource
  appProtectionPlanConfig:
    # minimum interval in seconds between two snapshot schedules
    # @default -- 60
    ppMinExecutionInterval: 60
  # Allows to configure any additional paramater as key value pair of string
  additionalFlags:
    app-snapshot-config-namespace: ntnx-system